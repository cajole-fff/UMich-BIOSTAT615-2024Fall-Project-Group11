% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DBSCAN.R
\name{DBSCAN}
\alias{DBSCAN}
\title{dbscan}
\description{
A class for DBSCAN clustering.
}
\details{
#TODO: fill in details w/ next few lines
}
\section{Methods}{

\describe{
    \item{\code{initialize(args)}}{Description of the constructor method.}
    \item{\code{$method1()}}{Description of method1.}
    \item{\code{$method2(args)}}{Description of method2.}
}
}

\section{Private Methods}{

\describe{
    \item{\code{private_method1()}}{Description of private_method1.}
}
}

\examples{
\dontrun{
    obj <- MyClassnew(arg1 = "value", arg2 = 42)
    obj$method1()
    result <- obj$method2(args)("example", 10)
    print(result)
}

}
\section{Super class}{
\code{\link[DBSCAN615:BaseEstimator]{DBSCAN615::BaseEstimator}} -> \code{DBSCAN}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{..eps}}{float, default=0.5. The maximum distance between two samples for one to be considered as in the neighborhood of the other.}

\item{\code{..min_samples}}{int, default=5. The number of samples (or total weight) in a neighborhood for a point to be considered as a core point.}

\item{\code{..metric}}{str or callable, default="euclidean". The metric to use when calculating distance between instances in a feature array.}

\item{\code{..metric_params}}{list, default=NULL. Additional keyword arguments for the metric function.}

\item{\code{..algorithm}}{str, default="auto". The algorithm to be used by the NearestNeighbors module to compute pointwise distances and find nearest neighbors.}

\item{\code{..leaf_size}}{int, default=30. Leaf size passed to BallTree or KDTree.}

\item{\code{..p}}{int, default=NULL. Power parameter for the Minkowski metric.}

\item{\code{..n_jobs}}{int, default=NULL. The number of parallel jobs to run for neighbors search. If -1, then the number of jobs is set to the number of CPU cores.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{..eps}}{float, default=0.5. The maximum distance between two samples for one to be considered as in the neighborhood of the other.}

\item{\code{..min_samples}}{int, default=5. The number of samples (or total weight) in a neighborhood for a point to be considered as a core point.}

\item{\code{..metric}}{str or callable, default="euclidean". The metric to use when calculating distance between instances in a feature array.}

\item{\code{..metric_params}}{list, default=NULL. Additional keyword arguments for the metric function.}

\item{\code{..algorithm}}{str, default="auto". The algorithm to be used by the NearestNeighbors module to compute pointwise distances and find nearest neighbors.}

\item{\code{..leaf_size}}{int, default=30. Leaf size passed to BallTree or KDTree.}

\item{\code{..p}}{int, default=NULL. Power parameter for the Minkowski metric.}

\item{\code{..n_jobs}}{int, default=NULL. The number of parallel jobs to run for neighbors search. If -1, then the number of jobs is set to the number of CPU cores.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DBSCAN-new}{\code{DBSCAN$new()}}
\item \href{#method-DBSCAN-clone}{\code{DBSCAN$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="DBSCAN615" data-topic="BaseEstimator" data-id="get_params"><a href='../../DBSCAN615/html/BaseEstimator.html#method-BaseEstimator-get_params'><code>DBSCAN615::BaseEstimator$get_params()</code></a></span></li>
<li><span class="pkg-link" data-pkg="DBSCAN615" data-topic="BaseEstimator" data-id="set_params"><a href='../../DBSCAN615/html/BaseEstimator.html#method-BaseEstimator-set_params'><code>DBSCAN615::BaseEstimator$set_params()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBSCAN-new"></a>}}
\if{latex}{\out{\hypertarget{method-DBSCAN-new}{}}}
\subsection{Method \code{new()}}{
Initializes the DBSCAN class with specified parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBSCAN$new(
  eps = 0.5,
  min_samples = 5,
  metric = "euclidean",
  metric_params = NULL,
  algorithm = "auto",
  leaf_size = 30,
  p = NULL,
  n_jobs = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eps}}{float, default=0.5
The maximum distance between two samples for one to be considered as in the neighborhood of the other.}

\item{\code{min_samples}}{int, default=5
The number of samples (or total weight) in a neighborhood for a point to be considered as a core point.}

\item{\code{metric}}{str or callable, default="euclidean"
The metric to use when calculating distance between instances in a feature array.}

\item{\code{metric_params}}{list, default=NULL
Additional keyword arguments for the metric function.}

\item{\code{algorithm}}{str, default="auto"
The algorithm to be used by the NearestNeighbors module to compute pointwise distances and find nearest neighbors.}

\item{\code{leaf_size}}{int, default=30
Leaf size passed to BallTree or KDTree.}

\item{\code{p}}{int, default=NULL
Power parameter for the Minkowski metric.}

\item{\code{n_jobs}}{int, default=NULL
The number of parallel jobs to run for neighbors search. If -1, then the number of jobs is set to the number of CPU cores.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
What the function returns.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBSCAN-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DBSCAN-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBSCAN$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
