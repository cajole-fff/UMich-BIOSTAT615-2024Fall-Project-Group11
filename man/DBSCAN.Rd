% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DBSCAN.R
\name{DBSCAN}
\alias{DBSCAN}
\title{DBSCAN R6 Class}
\description{
A class for performing DBSCAN clustering.
}
\details{
This class implements the DBSCAN clustering algorithm.

Private fields (for internal use only):
- **..eps**: float, default=0.5. The maximum distance between two samples for them to be considered as in the neighborhood of each other.
- **..min_samples**: int, default=5. The minimum number of samples required to form a cluster.
- **..metric**: str or callable, default="euclidean". The metric to use when calculating distance between instances in a feature array.
- **..metric_params**: list, default=NULL. Additional arguments for the metric function.
- **..algorithm**: str, default="auto". The algorithm used to compute nearest neighbors.
- **..leaf_size**: int, default=30. Leaf size passed to BallTree or KDTree.
- **..p**: int, default=NULL. Power parameter for the Minkowski metric.
- **..n_jobs**: int, default=NULL. The number of parallel jobs to run for neighbor search.
}
\section{Super class}{
\code{\link[DBSCAN615:BaseEstimator]{DBSCAN615::BaseEstimator}} -> \code{DBSCAN}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DBSCAN-new}{\code{DBSCAN$new()}}
\item \href{#method-DBSCAN-fit}{\code{DBSCAN$fit()}}
\item \href{#method-DBSCAN-fit_predict}{\code{DBSCAN$fit_predict()}}
\item \href{#method-DBSCAN-clone}{\code{DBSCAN$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="DBSCAN615" data-topic="BaseEstimator" data-id="get_params"><a href='../../DBSCAN615/html/BaseEstimator.html#method-BaseEstimator-get_params'><code>DBSCAN615::BaseEstimator$get_params()</code></a></span></li>
<li><span class="pkg-link" data-pkg="DBSCAN615" data-topic="BaseEstimator" data-id="set_params"><a href='../../DBSCAN615/html/BaseEstimator.html#method-BaseEstimator-set_params'><code>DBSCAN615::BaseEstimator$set_params()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBSCAN-new"></a>}}
\if{latex}{\out{\hypertarget{method-DBSCAN-new}{}}}
\subsection{Method \code{new()}}{
Initializes the DBSCAN class with specified parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBSCAN$new(
  eps = 0.5,
  min_samples = 5,
  metric = "euclidean",
  metric_params = NULL,
  algorithm = "auto",
  leaf_size = 30,
  p = NULL,
  n_jobs = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eps}}{float, default=0.5. The maximum distance between two samples for one to be considered in the same neighborhood.}

\item{\code{min_samples}}{int, default=5. The minimum number of samples required to form a cluster.}

\item{\code{metric}}{str or callable, default="euclidean". The distance metric to use.}

\item{\code{metric_params}}{list, default=NULL. Additional arguments for the metric function.}

\item{\code{algorithm}}{str, default="auto". The algorithm used to compute nearest neighbors.}

\item{\code{leaf_size}}{int, default=30. Leaf size passed to BallTree or KDTree.}

\item{\code{p}}{int, default=NULL. Power parameter for Minkowski metric.}

\item{\code{n_jobs}}{int, default=NULL. The number of parallel jobs to run.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBSCAN-fit"></a>}}
\if{latex}{\out{\hypertarget{method-DBSCAN-fit}{}}}
\subsection{Method \code{fit()}}{
Fits the DBSCAN clustering model on the input data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBSCAN$fit(X, y = NULL, sample_weight = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{A matrix or data frame. The input data to be clustered.}

\item{\code{y}}{Ignored, present for API consistency.}

\item{\code{sample_weight}}{Numeric vector. Weights for each sample.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The instance itself invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBSCAN-fit_predict"></a>}}
\if{latex}{\out{\hypertarget{method-DBSCAN-fit_predict}{}}}
\subsection{Method \code{fit_predict()}}{
Fits the DBSCAN clustering model on the input data and returns cluster labels.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBSCAN$fit_predict(X, y = NULL, sample_weight = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{A matrix or data frame. The input data to be clustered.}

\item{\code{y}}{Ignored, present for API consistency.}

\item{\code{sample_weight}}{Numeric vector. Weights for each sample.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A numeric vector of cluster labels.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBSCAN-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DBSCAN-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBSCAN$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
