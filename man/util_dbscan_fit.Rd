% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util_dbscan_fit.R
\name{util_dbscan_fit}
\alias{util_dbscan_fit}
\title{DBSCAN Clustering Fit Function}
\usage{
util_dbscan_fit(
  X,
  eps,
  min_samples,
  metric = "euclidean",
  metric_params = NULL,
  algorithm = "auto",
  leaf_size = 30,
  p = 2,
  n_jobs = 1
)
}
\arguments{
\item{X}{matrix, a numeric matrix of shape (n_samples, n_features), representing the input data to be clustered.}

\item{eps}{numeric, the maximum distance between two samples for one to be considered as in the neighborhood of the other.}

\item{min_samples}{integer, the minimum number of samples in a neighborhood for a point to be considered a core point. This includes the point itself.}

\item{metric}{character, the metric to use when calculating distance between instances in a feature array. Supported values are `"euclidean"` or `"minkowski"`.}

\item{metric_params}{list, additional arguments for the metric function (default: `NULL`).}

\item{algorithm}{character, the algorithm used to compute nearest neighbors. Default is `"auto"`.}

\item{leaf_size}{integer, leaf size passed to BallTree or KDTree. Affects the speed of nearest neighbor queries. Default is `30`.}

\item{p}{numeric, power parameter for the Minkowski metric. When `p=1`, this is equivalent to the Manhattan distance. When `p=2`, this is equivalent to the Euclidean distance. Default is `2`.}

\item{n_jobs}{integer, the number of parallel jobs to run for neighborhood computation. If `1`, no parallelization is used. Default is `1`.}
}
\description{
Fits the DBSCAN clustering model on the input data using Rcpp for efficient computation.
}
